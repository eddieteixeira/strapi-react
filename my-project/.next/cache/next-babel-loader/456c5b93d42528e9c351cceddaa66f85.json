{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/eddie/Documents/github/strapi-react/my-project/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport React, { useEffect, useState, useRef } from 'react';\nvar endpoint = 'http://localhost:1337/todos';\nexport default _s(function () {\n  _s();\n\n  var titleRef = useRef();\n\n  var _useState = useState([]),\n      todos = _useState[0],\n      setTodos = _useState[1];\n\n  var jwtRef = useRef();\n\n  var getTodos = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(endpoint, {\n                headers: {\n                  Authorization: \"Bearer \".concat(jwtRef.current)\n                }\n              }).then(function (r) {\n                return r.json();\n              });\n\n            case 2:\n              res = _context.sent;\n              setTodos(res); //console.log(res);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getTodos() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var jwt = window.sessionStorage.getItem('jwt');\n\n    if (!jwt) {\n      Router.push('/login');\n    }\n\n    jwtRef.current = jwt; //get list of todos\n\n    getTodos();\n  }, []);\n\n  var createTodo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var title, res, newTodos;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              title = titleRef.current.value;\n              _context2.next = 3;\n              return fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                  Authorization: \"Bearer \".concat(jwtRef.current),\n                  'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                  title: title\n                })\n              }).then(function (r) {\n                return r.json();\n              });\n\n            case 3:\n              res = _context2.sent;\n              newTodos = [].concat(_toConsumableArray(todos), [res]);\n              setTodos(newTodos);\n              console.log(res);\n              console.log(newTodos);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function createTodo() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: 'center',\n      width: \"200px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Title\",\n    ref: titleRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return createTodo();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Create Todo\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Todo's List:\"), todos.map(function (todo) {\n    return __jsx(\"div\", {\n      key: todo.title,\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        background: 'rgba(0,0,0,0.3)',\n        margin: '5px 0',\n        padding: '5px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: todo.done,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), todo.title);\n  })));\n}, \"bbDjuUD8dZzFL1Dk19GIT+R6L9A=\");","map":{"version":3,"sources":["/home/eddie/Documents/github/strapi-react/my-project/pages/index.js"],"names":["Router","React","useEffect","useState","useRef","endpoint","titleRef","todos","setTodos","jwtRef","getTodos","fetch","headers","Authorization","current","then","r","json","res","jwt","window","sessionStorage","getItem","push","createTodo","title","value","method","body","JSON","stringify","newTodos","console","log","display","flexDirection","justifyContent","alignItems","width","map","todo","background","margin","padding","done"],"mappings":"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","sourcesContent":["import Router from 'next/router';\nimport React, { useEffect, useState, useRef } from 'react';\n\nconst endpoint = 'http://localhost:1337/todos';\n\nexport default () => {\n  const titleRef = useRef();\n  const [todos, setTodos] = useState([]);\n  const jwtRef = useRef();\n\n  const getTodos = async () => {\n    const res = await fetch(endpoint, {\n      headers: {\n        Authorization: `Bearer ${jwtRef.current}`,\n      },\n    }).then(r => r.json());\n    setTodos(res);\n    //console.log(res);\n  };\n\n  useEffect(() => {\n    const jwt = window.sessionStorage.getItem('jwt');\n    if (!jwt) {\n      Router.push('/login');\n    }\n    jwtRef.current = jwt;\n\n    //get list of todos\n    getTodos();\n  }, []);\n\n  const createTodo = async () => {\n    const title = titleRef.current.value;\n\n    const res = await fetch(endpoint,  {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${jwtRef.current}`,\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        title,\n      }),\n   }).then(r => r.json());\n\n   const newTodos = [...todos, res];\n   setTodos(newTodos);\n   console.log(res);\n   console.log(newTodos);\n  };\n\n  return  <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', width: '100%' }}>\n    <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: 'center', width: \"200px\" }}>\n      <input type=\"text\" placeholder=\"Title\" ref={titleRef} />\n      <button onClick={ () => createTodo() }>Create Todo</button>\n    </div>\n\n    <div>\n      <h2>Todo's List:</h2>\n        {todos.map(todo => (\n          <div key={todo.title} style={{ display: 'flex', alignItems: 'center', background: 'rgba(0,0,0,0.3)', margin: '5px 0', padding: '5px' }}>\n            <input type=\"checkbox\" checked={todo.done} />\n            {todo.title}\n          </div>\n        ))}\n    </div>\n  </div>;\n}"]},"metadata":{},"sourceType":"module"}