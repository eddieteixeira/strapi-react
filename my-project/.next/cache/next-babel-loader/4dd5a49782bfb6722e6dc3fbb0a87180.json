{"ast":null,"code":"var _jsxFileName = \"/home/eddie/Documents/github/strapi/my-project/pages/login.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from 'react';\nimport Router from 'next/router';\nconst endpoint = 'http://localhost:1337/auth/local/register';\nexport default (() => {\n  const loginRef = useRef();\n  const pwdRef = useRef();\n\n  const login = async () => {\n    const identifier = loginRef.current.value;\n    const password = pwdRef.current.value;\n    const {\n      0: error,\n      1: setError\n    } = useState('');\n\n    try {\n      const {\n        jwt,\n        user\n      } = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          identifier,\n          password\n        })\n      }).then(res => {\n        if (res.status !== 200) {\n          throw new Error('Error loggin in');\n        }\n\n        return res.json();\n      });\n      window.sessionStorage.setItem('jwt', jwt);\n      window.sessionStorage.setItem('user', JSON.stringify(user));\n      Router.push('/');\n    } catch (e) {\n      setError(e.toString());\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Username or email\",\n    ref: loginRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    ref: pwdRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: () => login(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Login\")), error && __jsx(\"div\", {\n    style: {\n      border: '1px solid red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, error));\n});","map":{"version":3,"sources":["/home/eddie/Documents/github/strapi/my-project/pages/login.js"],"names":["React","useRef","useState","Router","endpoint","loginRef","pwdRef","login","identifier","current","value","password","error","setError","jwt","user","fetch","method","headers","body","JSON","stringify","then","res","status","Error","json","window","sessionStorage","setItem","push","e","toString","display","flexDirection","alignItems","border"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,MAAMC,QAAQ,GAAG,2CAAjB;AAEA,gBAAe,MAAM;AACnB,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;AACA,QAAMK,MAAM,GAAGL,MAAM,EAArB;;AAEA,QAAMM,KAAK,GAAG,YAAY;AACxB,UAAMC,UAAU,GAAGH,QAAQ,CAACI,OAAT,CAAiBC,KAApC;AACA,UAAMC,QAAQ,GAAGL,MAAM,CAACG,OAAP,CAAeC,KAAhC;AACA,UAAM;AAAA,SAACE,KAAD;AAAA,SAAQC;AAAR,QAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAG;AACH,YAAM;AAACY,QAAAA,GAAD;AAAMC,QAAAA;AAAN,UAAc,MAAMC,KAAK,CAACZ,QAAD,EAAW;AACxCa,QAAAA,MAAM,EAAE,MADgC;AAExCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF+B;AAKxCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBb,UAAAA,UADmB;AAEnBG,UAAAA;AAFmB,SAAf;AALkC,OAAX,CAAL,CASvBW,IATuB,CASlBC,GAAG,IAAK;AACZ,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACnB,gBAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OAdyB,CAA1B;AAgBAC,MAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,KAA9B,EAAqCf,GAArC;AACAa,MAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,MAA9B,EAAsCT,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAtC;AAEAZ,MAAAA,MAAM,CAAC2B,IAAP,CAAY,GAAZ;AACC,KArBD,CAqBC,OAAOC,CAAP,EAAS;AACNlB,MAAAA,QAAQ,CAACkB,CAAC,CAACC,QAAF,EAAD,CAAR;AACH;AACF,GA7BD;;AA+BA,SACE,4BACA;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,aAAa,EAAE,QAAlC;AAA4CC,MAAAA,UAAU,EAAE;AAAxD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,mBAA/B;AAAmD,IAAA,GAAG,EAAE9B,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,WAAW,EAAC,UAAnC;AAA8C,IAAA,GAAG,EAAEC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,OAAO,EAAG,MAAMC,KAAK,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CADA,EAMDK,KAAK,IAAI;AAAK,IAAA,KAAK,EAAE;AAAEwB,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCxB,KAAzC,CANR,CADF;AAUD,CA7CD","sourcesContent":["import React, {useRef, useState} from 'react';\nimport Router from 'next/router';\n\nconst endpoint = 'http://localhost:1337/auth/local/register';\n\nexport default () => {\n  const loginRef = useRef();\n  const pwdRef = useRef();\n\n  const login = async () => {\n    const identifier = loginRef.current.value;\n    const password = pwdRef.current.value;\n    const [error, setError] = useState('');\n\n    try{\n    const {jwt, user} = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        identifier,\n        password,\n      }),  \n    }).then(res  => {\n        if (res.status !== 200){\n            throw new Error('Error loggin in');\n        }\n        return res.json();\n    });\n\n    window.sessionStorage.setItem('jwt', jwt);\n    window.sessionStorage.setItem('user', JSON.stringify(user));\n\n    Router.push('/');\n    }catch (e){\n        setError(e.toString());\n    }\n  }\n\n  return(\n    <>\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n        <input type=\"text\" placeholder=\"Username or email\" ref={loginRef} />\n        <input type=\"password\" placeholder=\"Password\" ref={pwdRef} />\n        <button onClick={ () => login() }>Login</button>  \n    </div>\n  {error && <div style={{ border: '1px solid red'}}>{error}</div>}\n  </>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}