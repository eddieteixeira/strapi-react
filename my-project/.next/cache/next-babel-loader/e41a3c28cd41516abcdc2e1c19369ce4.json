{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/eddie/Documents/github/strapi-react/my-project/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport React, { useEffect, useState, useRef } from 'react';\nexport default _s(function () {\n  _s();\n\n  var titleRef = useRef();\n\n  var _useState = useState([]),\n      todos = _useState[0],\n      setTodos = _useState[1];\n\n  var jwtRef = useRef();\n  useEffect(function () {\n    var jwt = window.sessionStorage.getItem('jwt');\n\n    if (!jwt) {\n      Router.push('/login');\n    }\n\n    jwtRef.current = jwt;\n  }, []);\n\n  var createToto = function createToto() {\n    var title = titleRef.current.value;\n    fetch();\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"200px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Title\",\n    ref: titleRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return create.Todo();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Create Todo\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Todo's List:\"), __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, JSON.stringify(todos))));\n}, \"bbDjuUD8dZzFL1Dk19GIT+R6L9A=\");","map":{"version":3,"sources":["/home/eddie/Documents/github/strapi-react/my-project/pages/index.js"],"names":["Router","React","useEffect","useState","useRef","titleRef","todos","setTodos","jwtRef","jwt","window","sessionStorage","getItem","push","current","createToto","title","value","fetch","display","flexDirection","width","create","Todo","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AAGA,kBAAe,YAAM;AAAA;;AACnB,MAAMC,QAAQ,GAAGD,MAAM,EAAvB;;AADmB,kBAEOD,QAAQ,CAAC,EAAD,CAFf;AAAA,MAEZG,KAFY;AAAA,MAELC,QAFK;;AAGnB,MAAMC,MAAM,GAAGJ,MAAM,EAArB;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMO,GAAG,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,KAA9B,CAAZ;;AACA,QAAI,CAACH,GAAL,EAAU;AACRT,MAAAA,MAAM,CAACa,IAAP,CAAY,QAAZ;AACD;;AACDL,IAAAA,MAAM,CAACM,OAAP,GAAiBL,GAAjB;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,MAAMM,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAMC,KAAK,GAAGX,QAAQ,CAACS,OAAT,CAAiBG,KAA/B;AAEAC,IAAAA,KAAK;AACN,GAJD;;AAMA,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACN;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,aAAa,EAAE,QAAlC;AAA4CC,MAAAA,KAAK,EAAE;AAAnD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,OAA/B;AAAuC,IAAA,GAAG,EAAEhB,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMiB,MAAM,CAACC,IAAP,EAAN;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADM,EAMN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAenB,KAAf,CAAN,CAFJ,CANM,CAAR;AAWD,CA9BD","sourcesContent":["import Router from 'next/router';\nimport React, { useEffect, useState, useRef } from 'react';\n\n\nexport default () => {\n  const titleRef = useRef();\n  const [todos, setTodos] = useState([]);\n  const jwtRef = useRef();\n\n  useEffect(() => {\n    const jwt = window.sessionStorage.getItem('jwt');\n    if (!jwt) {\n      Router.push('/login');\n    }\n    jwtRef.current = jwt;\n  }, []);\n\n  const createToto = () => {\n    const title = titleRef.current.value;\n\n    fetch();\n  }\n\n  return  <div>\n    <div style={{ display: \"flex\", flexDirection: \"column\", width: \"200px\" }}>\n      <input type=\"text\" placeholder=\"Title\" ref={titleRef} />\n      <button onClick={() => create.Todo()}>Create Todo</button>\n    </div>\n\n    <div>\n      <h2>Todo's List:</h2>\n        <pre>{JSON.stringify(todos)}</pre>\n    </div>\n  </div>;\n}"]},"metadata":{},"sourceType":"module"}