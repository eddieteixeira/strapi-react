{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/eddie/Documents/github/strapi/my-project/pages/register.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport Router from 'next/router';\nvar endpoint = 'http://localhost:1337/auth/local/register';\nexport default _s(function () {\n  _s();\n\n  var loginRef = useRef();\n  var pwdRef = useRef();\n  var mailRef = useRef();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var register = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var username, email, password, _yield$fetch$then, jwt, user;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              username = loginRef.current.value;\n              email = mailRef.current.value;\n              password = pwdRef.current.value;\n              _context.prev = 3;\n              _context.next = 6;\n              return fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                  'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                  username: username,\n                  email: email,\n                  password: password\n                })\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 6:\n              _yield$fetch$then = _context.sent;\n              jwt = _yield$fetch$then.jwt;\n              user = _yield$fetch$then.user;\n              window.sessionStorage.setItem('jwt', jwt);\n              window.sessionStorage.setItem('user', JSON.stringify(user));\n              Router.push('/');\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              setError(_context.t0.toString());\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 14]]);\n    }));\n\n    return function register() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Login\",\n    ref: loginRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"mail\",\n    placeholder: \"Email\",\n    ref: mailRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    ref: pwdRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return register();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Register\")), error && __jsx(\"div\", {\n    style: {\n      border: '1px solid red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, error));\n}, \"V6W0+zbCT1xlM6jfRD82FtaRwlU=\");","map":{"version":3,"sources":["/home/eddie/Documents/github/strapi/my-project/pages/register.js"],"names":["React","useRef","Router","endpoint","loginRef","pwdRef","mailRef","useState","error","setError","register","username","current","value","email","password","fetch","method","headers","body","JSON","stringify","then","res","json","jwt","user","window","sessionStorage","setItem","push","toString","display","flexDirection","alignItems","border"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react';\nimport Router from 'next/router';\n\nconst endpoint = 'http://localhost:1337/auth/local/register';\n\nexport default () => {\n  const loginRef = useRef();\n  const pwdRef = useRef();\n  const mailRef = useRef();\n  const [error, setError] = useState('');\n\n  const register = async () => {\n    const username = loginRef.current.value;\n    const email = mailRef.current.value;\n    const password = pwdRef.current.value;\n\n    try{\n      const {jwt, user} = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password,\n        }),  \n      }).then(res  => res.json());\n\n      window.sessionStorage.setItem('jwt', jwt);\n      window.sessionStorage.setItem('user', JSON.stringify(user));\n\n      Router.push('/');\n\n      }catch (e) {\n        setError(e.toString());\n      }\n    };\n    \n\n  return(\n    <>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n        <input type=\"text\" placeholder=\"Login\" ref={loginRef} />\n        <input type=\"mail\" placeholder=\"Email\" ref={mailRef} />\n        <input type=\"password\" placeholder=\"Password\" ref={pwdRef} />\n        <button onClick={ () => register() }>Register</button>  \n      </div>\n    {error && <div style={{ border: '1px solid red'}}>{error}</div>}\n    </>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}