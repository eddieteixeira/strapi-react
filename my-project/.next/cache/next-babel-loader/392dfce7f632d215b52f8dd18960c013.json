{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/eddie/Documents/github/strapi/my-project/pages/register.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport Router from 'next/router';\nvar endpoint = 'http://localhost:1337/auth/local/register';\nexport default _s(function () {\n  _s();\n\n  var loginRef = useRef();\n  var pwdRef = useRef();\n  var mailRef = useRef();\n\n  var register = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var username, email, password, _yield$fetch$then, jwt, user;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              username = loginRef.current.value;\n              email = mailRef.current.value;\n              password = pwdRef.current.value;\n              _context.next = 5;\n              return fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                  'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                  username: username,\n                  email: email,\n                  password: password\n                })\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 5:\n              _yield$fetch$then = _context.sent;\n              jwt = _yield$fetch$then.jwt;\n              user = _yield$fetch$then.user;\n              window.sessionStorage.setItem('jwt', jwt);\n              window.sessionStorage.setItem('user', JSON.stringify(user));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function register() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Login\",\n    ref: loginRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), __jsx(\"input\", {\n    type: \"mail\",\n    placeholder: \"Email\",\n    ref: mailRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    ref: pwdRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return register();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"Register\"));\n}, \"a+WIsAt0kHQwxKcx2yeJlI7sJJc=\");","map":{"version":3,"sources":["/home/eddie/Documents/github/strapi/my-project/pages/register.js"],"names":["React","useRef","Router","endpoint","loginRef","pwdRef","mailRef","register","username","current","value","email","password","fetch","method","headers","body","JSON","stringify","then","res","json","jwt","user","window","sessionStorage","setItem","display","flexDirection","alignItems"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAMC,QAAQ,GAAG,2CAAjB;AAEA,kBAAe,YAAM;AAAA;;AACnB,MAAMC,QAAQ,GAAGH,MAAM,EAAvB;AACA,MAAMI,MAAM,GAAGJ,MAAM,EAArB;AACA,MAAMK,OAAO,GAAGL,MAAM,EAAtB;;AAEA,MAAMM,QAAQ;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,QADS,GACEJ,QAAQ,CAACK,OAAT,CAAiBC,KADnB;AAETC,cAAAA,KAFS,GAEDL,OAAO,CAACG,OAAR,CAAgBC,KAFf;AAGTE,cAAAA,QAHS,GAGEP,MAAM,CAACI,OAAP,CAAeC,KAHjB;AAAA;AAAA,qBAKWG,KAAK,CAACV,QAAD,EAAW;AACxCW,gBAAAA,MAAM,EAAE,MADgC;AAExCC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAF+B;AAKxCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,kBAAAA,QAAQ,EAARA,QADmB;AAEnBG,kBAAAA,KAAK,EAALA,KAFmB;AAGnBC,kBAAAA,QAAQ,EAARA;AAHmB,iBAAf;AALkC,eAAX,CAAL,CAUvBO,IAVuB,CAUlB,UAAAC,GAAG;AAAA,uBAAKA,GAAG,CAACC,IAAJ,EAAL;AAAA,eAVe,CALX;;AAAA;AAAA;AAKRC,cAAAA,GALQ,qBAKRA,GALQ;AAKHC,cAAAA,IALG,qBAKHA,IALG;AAiBfC,cAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,KAA9B,EAAqCJ,GAArC;AACAE,cAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,MAA9B,EAAsCT,IAAI,CAACC,SAAL,CAAeK,IAAf,CAAtC;;AAlBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARhB,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAqBA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEoB,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,aAAa,EAAE,QAAlC;AAA4CC,MAAAA,UAAU,EAAE;AAAxD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,OAA/B;AAAuC,IAAA,GAAG,EAAEzB,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,OAA/B;AAAuC,IAAA,GAAG,EAAEE,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,WAAW,EAAC,UAAnC;AAA8C,IAAA,GAAG,EAAED,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAIA;AAAQ,IAAA,OAAO,EAAG;AAAA,aAAME,QAAQ,EAAd;AAAA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,CADF;AAQD,CAlCD","sourcesContent":["import React, {useRef} from 'react';\nimport Router from 'next/router';\n\nconst endpoint = 'http://localhost:1337/auth/local/register';\n\nexport default () => {\n  const loginRef = useRef();\n  const pwdRef = useRef();\n  const mailRef = useRef();\n\n  const register = async () => {\n    const username = loginRef.current.value;\n    const email = mailRef.current.value;\n    const password = pwdRef.current.value;\n\n    const {jwt, user} = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password,\n      }),  \n    }).then(res  => res.json());\n\n    window.sessionStorage.setItem('jwt', jwt);\n    window.sessionStorage.setItem('user', JSON.stringify(user));\n  }\n\n  return(\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n    <input type=\"text\" placeholder=\"Login\" ref={loginRef} />\n    <input type=\"mail\" placeholder=\"Email\" ref={mailRef} />\n    <input type=\"password\" placeholder=\"Password\" ref={pwdRef} />\n    <button onClick={ () => register() }>Register</button>  \n    </div>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}